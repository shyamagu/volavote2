<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <title><%= title %></title>
    <!-- <script src="https://unpkg.com/vue@next"></script> -->
    <script src="https://unpkg.com/vue@3.1.1/dist/vue.global.prod.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <link rel='stylesheet' href='/stylesheets/poll.css' />
    <link rel='stylesheet' href='/stylesheets/polls/text.css' />
  </head>
  <body>
    <%- include('../partial/poll_header'); %>

    <div id="poll" class="poll_body">
      <div class="poll_title">{{title}}</div>
      <div v-if="image">
        <img class="poll_image" v-bind:src="image">
      </div>
      <div v-if="lock!=='true'" class="text_input_area">
        <div class="text_input_box"><textarea class="text_input" rows="3" v-model="message"></textarea></div>
        <div class="text_post_box"><button class="text_post_btn" @click="postMessage(message)">Post</button></div>
      </div>
      <div v-if="errorMessage" class="error_message">{{errorMessage}}</div>
      <div class="text_list_area">
        <transition-group>
          <div class="text_list" :class="{emphasized: (emphasizedIndex===index-1)}" v-for="(msg,index) in messages" :key="msg.key">
            <div class="text_agree_box"><button v-bind:disabled="yourMessage.includes(msg.key)||lock=='true'" class="text_agree_btn" @click="postMessage(msg.key)"><img class="agree_icon" src="/images/like.svg"></button></div>
            <div class="text_agree_number_box" :class="{your_own: yourMessage.includes(msg.key)}"><div class="text_agree_number">{{msg.value}}</div></div>
            <div class="text_display_box" :class="{your_own: yourMessage.includes(msg.key)}"><div class="text_display">{{msg.key}}</div></div>
          </div>
        </transition-group>
      </div>
    </div>
  </body>
  <script>
    const socket = io();
    var resizeTimer;
    const mediaQuery = window.matchMedia('(max-width: 700px)')
    const Poll = {
      data(){
        return{
          title:'<%= title %>',
          vvid:'<%= vvid %>',
          image:'<%= image %>',
          parent:'<%= parent %>',
          errorMessage:"",
          emphasizedIndex:-10,
          message:"",
          messages:[],
          voted:[],
          yourMessage:[],
          lock:'<%= lock %>',
        }
      },
      mounted() {
        this.resizePoll()

        socket.emit('pollCountUp',this.vvid)
        socket.on('pollCountUp',(countUp)=>{
          if(countUp.VVID===this.vvid){

            let arr = Object.keys(countUp.COUNTUP).map((e)=>{return {key:e,value:countUp.COUNTUP[e]}})
            arr.sort(function(a,b){
              if(a.value < b.value) return 1;
              if(a.value > b.value) return -1;
              return 0;
            })
            this.messages = arr

            this.resizePoll()
          }
        })
        socket.on('emphasizeVote',(emphasizeData)=>{
          if(emphasizeData.vvid===this.vvid){
            this.emphasizedIndex = emphasizeData.index
          }
        })
        socket.on('switchToUrl',(switchData)=>{
          if(switchData.from==="volavote" || switchData.from===this.parent){
            window.location.href=switchData.url
          }
        })
      },
      methods :{
        resizePoll(){
          if (mediaQuery.matches) {
          }else{
          }
        },
        postMessage(message){
          if(message){
            this.vote(message)
          }
        },
        vote(message){          
          this.errorMessage = ""

          if(this.lock==="true"){
            this.errorMessage = "LOCKED"
            return
          }

          if(this.yourMessage.includes(message)){
            this.errorMessage = "ALREADY POSTED"
            return
          }

          const vote = {vvid:this.vvid, vote:message}
          fetch("/poll/vote",{
            method:'POST',
            headers:{'Content-Type':'application/json'},
            body:JSON.stringify(vote)
          })
          .then(response=>response.json())
          .then(data=>{
            if(data.result==="OK"){
              this.yourMessage.push(message)
              this.message = ""
            }
            else if(data.result==="NG"){
              this.errorMessage = data.error
            }
          })
          .catch((error)=>{
            this.errorMessage = error
          });
        },
      }
    }
    Vue.createApp(Poll).mount('#poll')
  </script>
</html>
