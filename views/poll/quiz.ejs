<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns#">
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta name="og:url" content="<%= fullurl %>">
    <meta name="og:title" content="<%= title %>">
    <meta name="og:image" content="<%= ogpimageurl %>">
    <meta name="og:site_name" content="volavote">
    <meta name="og:type" content="article">
    <meta name="twitter:card" content="summary" />
    <title><%= title %></title>
    <!-- <script src="https://unpkg.com/vue@next"></script> -->
    <script src="https://unpkg.com/vue@3.1.1/dist/vue.global.prod.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <link rel='stylesheet' href='/stylesheets/poll.css' />
    <link rel='stylesheet' href='/stylesheets/polls/quiz.css' />
  </head>
  <body>
    <%- include('../partial/poll_header'); %>

    <div id="poll" class="poll_body">
      <div class="poll_title">{{title}}</div>
      <div v-if="image">
        <img class="poll_image" v-bind:src="image">
      </div>
      <!-- <div v-if="quizCorrectInt===0" class="quiz_correct_message">&nbsp;</div> -->
      <div v-if="quizCorrectInt===1" class="quiz_correct_message">{{getMessage('answer_correct')}}</div>
      <div v-if="quizCorrectInt===-1"class="quiz_incorrect_message">{{getMessage('answer_incorrect')}}</div>
      <div v-if="errorMessage" class="error_message">{{errorMessage}}</div>      
      <div v-for="index of number" :key=index class="quiz_line_area" :class="{emphasized: (emphasizedIndex===index-1)}">
        <div class="quiz_field" 
          @click="vote(index-1)" 
          :class="{selected: voted[index-1],
                  correct_selected:answer[index-1]===1&&voted[index-1]===1,
                  incorrect_selected:answer[index-1]===-1&&voted[index-1]===1}"
        >
        <!--
                  :class="{selected: voted[index-1],
                  correct_selected:answer[index-1]===1&&voted[index-1]===1,
                  correct_notselected:answer[index-1]===-1&&voted[index-1]===0,
                  incorrect_selected:answer[index-1]===-1&&voted[index-1]===1,
                  incorrect_notselected:answer[index-1]===1&&voted[index-1]===0}"
        -->
          <div class="quiz_check"><img v-if="answer[index-1]===1" src="/images/check_green.svg"></div>
          <div class="quiz_check"><img v-if="voted[index-1]===1" src="/images/check.svg"></div>
          <div class="quiz_line">{{displays[index-1]}}</div>
        </div>
      </div>
    </div>
  </body>
  <script>
    const socket = io();
    var resizeTimer;
    const mediaQuery = window.matchMedia('(max-width: 700px)')
    const Poll = {
      data(){
        return{
          title:'<%= title %>',
          vvid:'<%= vvid %>',
          image:'<%= image %>',
          number: Number('<%= number %>'),
          displays:JSON.parse('<%- JSON.stringify(displays) %>'),
          parent:'<%= parent %>',
          errorMessage:"",
          emphasizedIndex:-1,
          result:[],
          voted:[],
          answer:[],
          bar_max_length:0,
          bars:[],
          lock:'<%= lock %>',
          quizMessage_correct:'Correct!',
          quizMessage_incorrect:'Incorrect',
          quizCorrectInt:0, //-1:incorrect, 1:correct
          locale:'en',
          message:{
            en:{
              answer_correct : "Correct!",
              answer_incorrect : "Incorrect",
            },
            ja:{
              answer_correct : "正解!",
              answer_incorrect : "残念。不正解",
            }
          },
        }
      },
      mounted() {
        const language = window.navigator.language
        if(language){
          this.locale = language.toLocaleLowerCase().split("-")[0]
        }
        
        this.result = new Array(this.number).fill(0)
        this.voted = new Array(this.number).fill(0)
        this.answer= new Array(this.number).fill(0)

        this.resizePoll()

        socket.emit('pollCountUp',this.vvid)
        socket.on('pollCountUp',(countUp)=>{
          if(countUp.VVID===this.vvid){

            this.result = countUp.COUNTUP

            this.resizePoll()
          }
        })
        socket.on('emphasizeVote',(emphasizeData)=>{
          if(emphasizeData.vvid===this.vvid){
            this.emphasizedIndex = emphasizeData.index
          }
        })
        socket.on('switchToUrl',(switchData)=>{
          if(switchData.from==="volavote" || switchData.from===this.parent){
            window.location.href=switchData.url
          }
        })
        socket.on('showResult',(resultData)=>{
          if(resultData.vvid===this.vvid){
            const receiveAnswer = resultData.answer

            this.quizCorrectInt = 1
            receiveAnswer.forEach((element,index) => {
              if(element===1){
                this.answer[index]=1
                if(this.voted[index]!==1) this.quizCorrectInt = -1
              }else{
                this.answer[index]=-1
                if(this.voted[index]===1) this.quizCorrectInt = -1
              }
            });

          }
        })
      },
      methods :{
        getMessage(key){
          return this.message[this.locale]? this.message[this.locale][key] : this.message['en'][key]
        },
        resizePoll(){
          if (mediaQuery.matches) {
          }else{
          }
        },
        vote(index){          
          if(this.lock==="true"){
            //this.voted = new Array(this.number).fill(0)
            this.errorMessage = "POLL CLOSED"
            return
          }
          this.errorMessage = ""
          this.voted[index] = this.voted[index]===1?0:1

          const vote = {vvid:this.vvid, vote:this.voted}
          fetch("/poll/vote",{
            method:'POST',
            headers:{'Content-Type':'application/json'},
            body:JSON.stringify(vote)
          })
          .then(response=>response.json())
          .then(data=>{
            if(data.result==="OK"){
              //Nothing to do
            }
            else if(data.result==="NG"){
              this.errorMessage = data.error
            }
          })
          .catch((error)=>{
            this.errorMessage = error
          });
        },
      }
    }
    Vue.createApp(Poll).mount('#poll')
  </script>
</html>
